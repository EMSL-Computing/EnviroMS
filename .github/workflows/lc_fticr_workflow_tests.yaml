name: Test LC-FTICR Workflow

on:
  push:
  workflow_dispatch:

jobs:
  run-miniwdl:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        sudo usermod -aG docker $USER

    - name: Install MiniWDL
      run: |
        python -m pip install --upgrade pip
        pip install miniwdl
    
    - name: Download LCMS metabolomics database and test data
      run: |
        make get-test-data

    - name: Run Lipidomics WDL with lipidomics test data and pushed Docker Image
      run: |
        miniwdl run wdl/metaMS_lcmslipidomics.wdl -i wdl/metams_input_lipidomics.json --verbose --no-cache --copy-input-files

    - name: Run LCMS metabolomics WDL with test data and pushed Docker Image
      run: |
        make wdl-run-lcms-metab

    - name: Run GCMS WDL with pushed Docker Image
      run: |
        miniwdl run wdl/metaMS_gcms.wdl -i wdl/metams_input_gcms.json --verbose --no-cache --copy-input-files
  
    - name: Build Docker Image
      run: |
        docker build -t local-metams:latest .
    
    - name: Run GCMS WDL with local Docker Image based on Dockerfile
      run: |
        miniwdl run wdl/metaMS_gcms.wdl -i wdl/metams_input_gcms_local_docker.json --verbose --no-cache --copy-input-files
    
    - name: Run Lipidomics WDL with local Docker Image based on Dockerfile
      run: |
        miniwdl run wdl/metaMS_lcmslipidomics.wdl -i wdl/metams_input_lipidomics_local_docker.json --verbose --no-cache --copy-input-files
    
    - name: Run LCMS metabolomics WDL with local Docker Image based on Dockerfile
      run: |
        miniwdl run wdl/metaMS_lcms_metabolomics.wdl -i wdl/metams_input_lcms_metabolomics_local_docker.json --verbose --no-cache --copy-input-files
    
    - name: Remove test data
      run: |
        rm -rf test_data